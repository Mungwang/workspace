-- SQL01_SELECT(Basic)
--1
SELECT DEPARTMENT_NAME "학과 명", CATEGORY "계열"
FROM TB_DEPARTMENT;

--2
SELECT DEPARTMENT_NAME ||'의 정원은'|| CAPACITY ||'명 입니다.'"학과별 정원"
FROM TB_DEPARTMENT;

--3
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과')
AND SUBSTR(STUDENT_SSN,8,1) IN (2,4)
AND ABSENCE_YN = 'Y';

--4
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY STUDENT_NAME DESC;

--5
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

--6
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IN NULL;

--8
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9
SELECT CATEGORY
FROM TB_DEPARTMENT
GROUP BY CATEGORY;

--10
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE STUDENT_NO LIKE 'A2%'
AND STUDENT_ADDRESS LIKE '%전주%'
AND ABSENCE_YN ='N';
---------------------------------------------------------------------------------------------------------------------------------
-- SQL02_SELECT(Function)

/* 1. 영어영문학과(학과코드 002) 학생들의 학번과 이름,입학년도를 입학년도가 빠른순으로 표시하는
 SQL 문장을 작성하시오.(단, 헤더는 "학번", "이름","입학년도"거 표시되록한다.)
*/

SELECT STUDENT_NO "학번", STUDENT_NAME "이름", TO_CHAR(ENTRANCE_DATE,'YYYY"-"MM"-"DD') "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002
ORDER BY 3;

/* 2. 춘 기술대학교의 교수 중 이름이 세글자가 아닌 교수가 한 명있다고 한다. 그 교수의 이름과
 주민번호를 화면에 출력하는 SQL 문장을 작성해보자.(*이때 올바르게 작성한 SQL문장의 결과 값이
 예상과 다르게 나올 수 있다. 원인이 무엇인지 생각해볼것 )
*/

SELECT PROFESSOR_NAME 교수이름, PROFESSOR_SSN 주민번호
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME)!=3;

/* 3.춘 기술대학교의 남자 교수들의 이름과 나이를 출력하는 SQL문장을 작성하시오. 단 이때 나이가 적은
사람에서 많은 사람 순서로 화면에 출력 되도록만드시오.(단,교수 중 2000년 이후 출생자는 없으면 출력 헤더는
"교수이름","나이"로 한다. 나이는 '만'으로 계산한다.)
*/

SELECT PROFESSOR_NAME,FLOOR((SYSDATE-TO_DATE(19||SUBSTR(PROFESSOR_SSN,1,6),'RRMMDD'))/365) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) =1
ORDER BY 나이;

-- 선생님이 푼거
SELECT PROFESSOR_NAME 교수이름,
       FLOOR(MONTHS_BETWEEN(SYSDATE,TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,6),'YYYYMMDD')) /12 ) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) ='1'
ORDER BY 나이;

/* 4.교수들의 이름 중 성을 제외한 이름만 출력하는 SQL 문장을 작성하시오. 출력 헤더는 "이름"이 찍히도록한다
   (성이 2자인 경우교수는 없다고 가정하시오)
*/
SELECT SUBSTR(PROFESSOR_NAME,2,LENGTH(PROFESSOR_NAME)-1) 이름
FROM TB_PROFESSOR;

/* 5.춘 기술대학교의 재수생 입학자를 구하려고한다. 어떻게 찾아낼 것인가? 이때, 19살에
   입학하면 재수를 하지 않은것으로 간주한다.
*/
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) 
    - EXTRACT(YEAR FROM (TO_DATE('19'|| SUBSTR(STUDENT_SSN,1,6),'YYYYMMDD'))) >19;

-- 6.2020년 크리스마스는 무슨 요일인가?
SELECT TO_CHAR(TO_DATE('2020-12-25'),'DAY') FROM DUAL;

-- 7. TO_DATE('99/10/11','YY/MM/DD') 2099년 10월11일
   TO_DATE('49/10/11','YY/MM/DD') 2049년 10월11일
   TO_DATE('99/10/11','RR/MM/DD') 1999년 10월11일
   TO_DATE('49/10/11','RR/MM/DD') 2049년 10월11일
   
/* 8.춘 기술대학교의 2000년도 이후 입학자들은 학번이 A로 시작하게 되어있다. 2000년도이전
     학번을 받은 학생들의 학번과 이름을 보여주는 SQL 문장을 작성하시오
*/

SELECT STUDENT_NO,STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '9%';

/* 9.학번이 A51718 인 한아름 학생의 학점 총 평점을 구하는 SQL문을 작성하시오. 단, 이때 출력화면의
   헤더는 "평점"이라고 찍히게 하고, 점수는 반올림하여 소수점 이하 한자리까지만 표시한다.
*/

SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO='A517178';

-- 10.학과별 학생수를 구하여 "학과번호", "학생수(명)"의 형태로 헤더를 만들어 결과 값이 출력되도록하시오.
SELECT DEPARTMENT_NO 학과번호 ,COUNT(DEPARTMENT_NO) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 11.지도 교수를 배정받지 못한 학생의 수는 몇명정도 되는지 알아내는 SQL문을 작성하시오.

SELECT COACH_PROFESSOR_NO
FROM TB_STUDENT;

/* 12.학번이 A112113인 김고운 학생의 년도 별 평정을 구하는 SQL 문을 작성하시오. 단,
   이때 출력 화면의 헤더는 "년도", "년도 별 평점" 이라고 찍히게 되고, 점수는 반올림하여
   소수점 이하 한자리까지만 표시한다
*/
SELECT SUBSTR(TERM_NO,1,4)AS "년도", ROUND(AVG(POINT),1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 1; -- 첫번째 년도로 오름차순 

-- 13. 학과 별 휴학생 수를 파악하고자 한다. 학과 번호와 휴학생 수를 표시하는 SQL문장을 완성
SELECT DEPARTMENT_NO, COUNT(DECODE(ABSENCE_YN,'Y','Y','NO',0))"휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;
-- COUNT(컬럼명)- NULL이 아닐때 카운트
-- COUNT(함수식)- 함수의 결과가있을때(NULL이 아닐때 카운트)

SELECT DEPARTMENT_NO, SUM(DECODE(ABSENCE_YN,'Y',1,0)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- 14. 춘 대학교에 다니는 동명이인 학생들의 이름을 찾고자 한다. 어떤 SQL 문장을 사용하면될까?
SELECT STUDENT_NAME 동일이름, COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*)> 1
ORDER BY 1;
 
/* 15.학번이 A112113인 김고운 학생으 년도, 학기 별 평점과 년도 별 누적 평점, 총 평정을 구하는
   SQL문을 작성하시오.(단, 평정은 소수점 1자리까지만 반올림하여 표시한다.)
*/
SELECT NVL(SUBSTR(TERM_NO,1,4),' ')"년도", NVL(SUBSTR(TERM_NO,5,2),' ')"학기", ROUND(AVG(POINT),1)"평점"
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2))
ORDER BY SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2);

----------------------------------------------------------------------------------
-- 춘 대학교 워크북 과제
-- SQL03_SELECT(Function)

--1
SELECT STUDENT_NAME"학생 이름", STUDENT_ADDRESS"주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3
SELECT STUDENT_NAME"학생이름", STUDENT_NO"학번", STUDENT_ADDRESS"거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '%강원도%'OR STUDENT_ADDRESS LIKE '%경기도%')
AND STUDENT_NO NOT LIKE 'A%'
ORDER BY STUDENT_NAME;

--4
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '법학과')
ORDER BY PROFESSOR_SSN;

--5
SELECT STUDENT_NO"학번", TO_CHAR(AVG(POINT),'0.00')"학점"
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO ='200402'
GROUP BY STUDENT_NO
ORDER BY 2 DESC;

--6
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

--7
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 8번
-- 과목별 교수 이름을 찾으려고 한다. 과목이름과 교수이름을 출력하는 SQL문을 작성하시오.
-- TB_CLASS_PROFESSOR : 과목별 교수의 정보를 저장한 테이블 (과목 코드.학과 코드)
-- ANSI방식

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

-- TB_CLASS와 TB_PROFESSOR 테이블이 공통으로
-- DEPARTMENT_NO 칼럼을 가지고 있다 해서 이를 이용해서 JOIN을 하면 안됨!
/*
TB_CLASS와 TB_PROFESSOR 테이블을 조회 해보면 같은 컬럼 값을 가지는 DEPARTMENT_NO가 많이 존재함
같은 컬럼 값을 가지는 DEPARTMENT_NO가 많이 존재함
--> 이럴 경우
    TB_CLASS의 DEPARTMENT_NO와 TB_PROFESSOR의 DEPARTMENT_NO컬럼 값들이
    서로 연결되기 위한 모든 경우의 수를 만들어냄 (곱집합이 되어버림)
*/
-- ORACLE 방식
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C ,TB_CLASS_PROFESSOR CP ,TB_PROFESSOR P
WHERE C.CLASS_NO  = CP.CLASS_NO AND CP.PROFESSOR_NO = P.PROFESSOR_NO;

-- 9번
-- 8번의 결과 중 '인문 사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
-- 이에 해당하는 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- ORACLE
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C ,TB_CLASS_PROFESSOR CP ,TB_PROFESSOR P, TB_DEPARTMENT D
WHERE C.CLASS_NO  = CP.CLASS_NO 
AND CP.PROFESSOR_NO = P.PROFESSOR_NO
AND P.DEPARTMENT_NO = D.DEPARTMENT_NO
AND CATEGORY = '인문사회';
      
-- 10번
SELECT STUDENT_NO"학번", STUDENT_NAME"학생 이름", ROUND(AVG(POINT),1)"전체 평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;

-- 11
SELECT DEPARTMENT_NAME, S.STUDENT_NAME,  P.PROFESSOR_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D  ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';


-- 12
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE '2007%'
AND CLASS_NAME = '인간관계론';

-- 13
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

--14
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수미지정') 지도교수
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

--15
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME 학과이름, ROUND(AVG(POINT),8) 평점
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING ROUND(AVG(POINT), 8) >= 4
ORDER BY STUDENT_NO;

--16
SELECT CLASS_NO, CLASS_NAME, ROUND(AVG(POINT),8) "AVG(POINT)" FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;

-- 17
SELECT STUDENT_NAME, STUDENT_ADDRESS FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT
                                        WHERE STUDENT_NAME = '최경희');
                                        
-- 18
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT 
         JOIN TB_DEPARTMENT USING(DEPARTMENT_NO) 
         JOIN TB_GRADE USING(STUDENT_NO) 
         WHERE DEPARTMENT_NAME = '국어국문학과' 
         GROUP BY STUDENT_NO, STUDENT_NAME 
         ORDER BY AVG(POINT) DESC)
         WHERE ROWNUM = 1;

SELECT STUDENT_NO ,STUDENT_NAME
FROM 
    (SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
    FROM TB_GRADE
    JOIN TB_STUDENT USING(STUDENT_NO)
    WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과')
    GROUP BY STUDENT_NO, STUDENT_NAME
    ORDER BY 평점 DESC)
WHERE ROWNUM =1;

-- 19
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) 전공평점
FROM TB_DEPARTMENT
JOIN TB_CLASS USING(DEPARTMENT_NO) 
JOIN TB_GRADE USING(CLASS_NO) 
WHERE CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT
                                WHERE DEPARTMENT_NAME = '환경조경학과')
AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;

