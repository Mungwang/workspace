-- 로그인
SELECT MEMBER_NO,MEMBER_ID,MEMBER_NM,MEMBER_GENDER,ENROLL_DATE
FROM MEMBER
WHERE MEMBER_ID = 'user01'
AND MEMBER_PW = 'pass01'
AND SECESSION_FL = 'N';

-- 회원 정보 모두 조회(아이디, 이름,가입일)
-- 단, 탈퇴 회원 제외, 아이디 오름 차순 조회

SELECT MEMBER_ID,MEMBER_NM,ENROLL_DATE
FROM MEMBER
WHERE SECESSION_FL = 'N' 
ORDER BY MEMBER_ID;

commit;

UPDATE MEMBER
SET MEMBER_NM = ?,MEMBER_GENDER = ?
WHERE MEMBER_NO =?;
-- 05-31

UPDATE MEMBER
SET SECESSION_FL = 'Y'
WHERE MEMBER_NO =? AND MEMBER_PW =?;

-- 게시글 목록 조회 + 댓글 개수(상관 서브쿼리 + 스칼라 서브쿼리)
-- BOARD 테이블 : BOARD_NO, BOARD_TITLE, BOARD_CONNTENT, 
--            CREATE_DATE,READ_COUNT, MEMBER_NO

SELECT B.BOARD_NO, BOARD_TITLE, CREATE_DATE, READ_COUNT, MEMBER_NM,
    (SELECT COUNT(*) FROM REPLY R
     WHERE R.BOARD_NO=B.BOARD_NO) REPLY_COUNT
FROM BOARD B
JOIN MEMBER USING(MEMBER_NO)
ORDER BY BOARD_NO DESC;
-- 게시글 번호가 크다 == 최신 글이다

-- 댓글 개수 조회(특정 게시글만)
SELECT COUNT(*) FROM REPLY
WHERE BOARD_NO=1;

-- BOARD 테이블 샘플 데이터
INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 게시글 1', '샘플1 내용입니다.', DEFAULT, DEFAULT, 1);

INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 게시글 2', '샘플2 내용입니다.', DEFAULT, DEFAULT, 1);

INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 게시글 3', '샘플3 내용입니다.', DEFAULT, DEFAULT, 1);

COMMIT;

-- 댓글 샘플 데이터 삽입
-- REPLY_NO, REPLY_CONTENT, CREATE_DATE, MEMBER_NO, BOARD_NO
INSERT INTO REPLY
VALUES(SEQ_REPLY_NO.NEXTVAL, '샘플1의 댓글1', DEFAULT, 1, 1);

INSERT INTO REPLY
VALUES(SEQ_REPLY_NO.NEXTVAL, '샘플1의 댓글2', DEFAULT, 1, 1);

INSERT INTO REPLY
VALUES(SEQ_REPLY_NO.NEXTVAL, '샘플1의 댓글3', DEFAULT, 1, 1);

COMMIT;

-- 특정 게시글 상세 조회
SELECT B.* ,MEMBER_NM
FROM BOARD B
JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
WHERE BOARD_NO = 2;

-- 특정 게시글의 댓글 목록 조회
SELECT R.* , MEMBER_NM
FROM REPLY R
JOIN MEMBER M ON(R.MEMBER_NO = M.MEMBER_NO) 
WHERE BOARD_NO = 1
--ORDER BY REPLY_NO DESC; -- 최근 댓글이 상단
ORDER BY REPLY_NO;-- 최근 댓글이 하단

-- 댓글 목록에서 최근 작성한 글은 제일 위? 제일아래?
--                              SNS  카페, 커뮤니티

-- 게시글 수 증가
-- 이전 조회수 +1을 조회수 컬럼에 대입
UPDATE BOARD SET
READ_COUNT = READ_COUNT +1
WHERE BOARD_NO = ?;


SELECT B.* ,MEMBER_NM
		FROM BOARD B
		JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE BOARD_NO = 1
		ORDER BY REPLY_NO;

-- 06-01 게시글 삭제

DELETE FROM BOARD WHERE BOARD_NO =1;
-- ORA-02292: 무결성 제약조건(MGM_MEMBER.SYS_C007572)이 위배되었습니다- 자식 레코드가 발견되었습니다

SELECT * FROM BOARD WHERE BOARD_NO = 1; -- BOARD 테이블 1번 게시글
SELECT * FROM REPLY WHERE BOARD_NO = 1; -- REPLY 테이블에서 BOARD 테이블 1번 게시글을 참조 하는 댓글
--> 기본적으로 삭제 불가
--> 삭제 옵션을 추가하면 가능
--> ON DELECT SET NULL(부모키 삭제시 자식 컬럼 NULL) 
--> ON DELETE CASCADE(참조하던 자식 행도 삭제)

-- 제약조건은 ALTER(변경) 없음 -> 삭제 후 다시 추가

-- 기존 REPLY 테이블에 FK 제약조건 삭제
ALTER TABLE REPLY DROP CONSTRAINT SYS_C007572;

-- 삭제 옵션이 추가된 FK를 다시 추가
ALTER TABLE REPLY
ADD FOREIGN KEY(BOARD_NO)
REFERENCES BOARD
ON DELETE CASCADE;
-- TABLE REPLY이(가) 변경되었습니다.

-- 다시 1번 게시글 삭제 시도
DELETE FROM BOARD WHERE BOARD_NO = 1;

SELECT * FROM BOARD WHERE BOARD_NO = 1;
SELECT * FROM REPLY WHERE BOARD_NO = 1;

ROLLBACK;
 
-- 특정 게시글 수정
UPDATE BOARD SET 
BOARD_TITLE = ?,
BOARD_CONTENT = ?
WHERE BOARD_NO = ?;

-- 댓글 작성
INSERT INTO REPLY 
VALUES( SEQ_REPLY_NO.NEXTVAL,?,DEFAULT,?,?);

-- 댓글 수정
UPDATE REPLY SET
REPLY_CONTENT = ?
WHERE REPLY_NO = ?;

-- 댓글 삭제
DELETE FROM REPLY
WHERE BOARD_NO = 1;

ROLLBACK;

-- 게시글 작성
INSERT INTO BOARD
VALUES(SEQ_BOARD_NO.NEXTTVAL,?,?,DEFAULT,DEFAULT,?);

-- 게시글 검색
SELECT BOARD_NO, BOARD_TITLE, CREATE_DATE, READ_COUNT, MEMBER_NM,
    (SELECT COUNT(*) FROM REPLY R
     WHERE R.BOARD_NO = B.BOARD_NO) REPLY_COUNT 
FROM BOARD B
JOIN MEMBER USING (MEMBER_NO)
--WHERE BOARD_TITLE LIKE '%'||?||'%';-- 제목검색
--WHERE BOARD_CONTENT LIKE '%'|| ? ||'%';-- 내용검색
--WHERE BOARD_TITLE LIKE '%'|| ? || '%'
--OR BOARD_CONTENT LIKE '%'|| ? || '%'; -- 제목+내용
WHERE MEMBER_NM LIKE '%' || ? || '%' -- 작성자검색

ORDER BY BOARD_NO DESC;
